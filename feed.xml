<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://pierreexeter.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://pierreexeter.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-05T18:59:29+00:00</updated><id>https://pierreexeter.github.io/feed.xml</id><title type="html">blank</title><subtitle>Welcome to my personal website ! </subtitle><entry><title type="html">Data Analysis and Regression Predictions with Python</title><link href="https://pierreexeter.github.io/blog/python-regression/" rel="alternate" type="text/html" title="Data Analysis and Regression Predictions with Python"/><published>2025-05-30T21:01:00+00:00</published><updated>2025-05-30T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/python-regression</id><content type="html" xml:base="https://pierreexeter.github.io/blog/python-regression/"><![CDATA[<h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/data-science-projects"> <img class="only-light w-100" alt="PierreExeter/data-science-projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=data-science-projects&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/data-science-projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=data-science-projects&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div> <h2 id="project">Project</h2> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/House_prices.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="python"/><category term="scikit-learn"/><category term="predictive-modeling"/><category term="EDA"/><summary type="html"><![CDATA[Built a predictive model in Python to forecast residential home prices, applying machine learning with scikit-learn to solve a supervised regression problem.]]></summary></entry><entry><title type="html">Exploratory Data Analysis and Classification Predictions with Python</title><link href="https://pierreexeter.github.io/blog/python-classification/" rel="alternate" type="text/html" title="Exploratory Data Analysis and Classification Predictions with Python"/><published>2025-05-29T21:01:00+00:00</published><updated>2025-05-29T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/python-classification</id><content type="html" xml:base="https://pierreexeter.github.io/blog/python-classification/"><![CDATA[<h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/data-science-projects"> <img class="only-light w-100" alt="PierreExeter/data-science-projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=data-science-projects&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/data-science-projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=data-science-projects&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div> <h2 id="project">Project</h2> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/Titanic.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="python"/><category term="scikit-learn"/><category term="machine-learning"/><summary type="html"><![CDATA[Developed a predictive model to identify factors influencing survival during the Titanic disaster. This project involved a complete machine learning workflow, from data cleaning and feature engineering to fitting a classifier.]]></summary></entry><entry><title type="html">Deployment of a Large Language Model Web Application</title><link href="https://pierreexeter.github.io/blog/llama2-chatbot/" rel="alternate" type="text/html" title="Deployment of a Large Language Model Web Application"/><published>2025-05-28T21:01:00+00:00</published><updated>2025-05-28T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/llama2-chatbot</id><content type="html" xml:base="https://pierreexeter.github.io/blog/llama2-chatbot/"><![CDATA[<p>In this project, I deployed a chatbot prototype to explore the capabilities of large language models. This project involved integrating the Llama 2 API from <a href="https://replicate.com/">Replicate</a> into a responsive front-end web application built with <a href="https://streamlit.io/">Streamlit</a>.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/llama2-chatbot-480.webp 480w,/assets/img/portfolio/llama2-chatbot-800.webp 800w,/assets/img/portfolio/llama2-chatbot-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/llama2-chatbot.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p style="text-align:center;"> <a href="https://llama2-chat-project.streamlit.app/">VIEW LIVE DEMO</a> </p> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/llama2"> <img class="only-light w-100" alt="PierreExeter/llama2" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=llama2&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/llama2" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=llama2&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div>]]></content><author><name></name></author><category term="LLM"/><category term="python"/><category term="streamlit"/><category term="docker"/><summary type="html"><![CDATA[Deployed a chatbot prototype to explore the capabilities of large language models. This project involved integrating the Llama 2 API from Replicate into a responsive front-end web application built with Streamlit.]]></summary></entry><entry><title type="html">Customer Data Cleaning with SQL</title><link href="https://pierreexeter.github.io/blog/customer-data-cleaning/" rel="alternate" type="text/html" title="Customer Data Cleaning with SQL"/><published>2025-05-18T21:01:00+00:00</published><updated>2025-05-18T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/customer-data-cleaning</id><content type="html" xml:base="https://pierreexeter.github.io/blog/customer-data-cleaning/"><![CDATA[<p>Data cleaning is the foundational step in any data analysis process. In this project, I cleaned customer data using SQL by removing duplicates, handling missing values, standardizing formats, and splitting columns for better usability.</p> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/SQL_projects"> <img class="only-light w-100" alt="PierreExeter/SQL_projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=SQL_projects&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/SQL_projects" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=SQL_projects&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div> <h2 id="create-the-database">Create the database</h2> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">DATABASE</span> <span class="n">IF</span> <span class="k">EXISTS</span> <span class="nv">`customers`</span><span class="p">;</span>
<span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="nv">`customers`</span><span class="p">;</span>
<span class="n">USE</span> <span class="nv">`customers`</span><span class="p">;</span>
</code></pre></div></div> <h2 id="create-an-empty-table">Create an empty table</h2> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">customer_data</span> <span class="p">(</span>
<span class="nv">`id`</span> <span class="nb">int</span><span class="p">,</span>
<span class="nv">`customer_id`</span> <span class="nb">int</span><span class="p">,</span>
<span class="nv">`phone`</span> <span class="nb">text</span><span class="p">,</span>
<span class="nv">`birth_date`</span> <span class="nb">text</span><span class="p">,</span>
<span class="nv">`address`</span> <span class="nb">text</span><span class="p">,</span>
<span class="nv">`total_money_spent`</span> <span class="nb">int</span><span class="p">,</span>
<span class="nv">`income`</span> <span class="nb">text</span><span class="p">,</span>
<span class="nv">`Are you over 18?`</span> <span class="nb">text</span><span class="p">,</span>
<span class="nv">`favorite_color`</span> <span class="nb">text</span><span class="p">,</span>
<span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="n">id</span><span class="p">));</span>
</code></pre></div></div> <h2 id="import-the-data">Import the Data</h2> <ul> <li>Using MySQL Workbench, go to Schemas tab &gt; customers data base &gt; Table &gt; right click on customer_data.</li> <li>Select ‘Table Data Importation Wizard’</li> <li>Select customer_data.csv</li> </ul> <p>Note that it’s good practice to create a staging or back up table in case we make a mistake in the data cleaning process.</p> <p>Let’s look at the data.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> 
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_000-480.webp 480w,/assets/img/customer_data_sql_img/Selection_000-800.webp 800w,/assets/img/customer_data_sql_img/Selection_000-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_000.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="drop-the-duplicates">Drop the Duplicates</h2> <p>Let’s check if there are any duplicates by counting the number of customer_id.</p> <h4 id="method-1--using-count">Method 1 : using COUNT</h4> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">customer_id</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">customer_id</span><span class="p">)</span>
<span class="k">FROM</span> <span class="n">customer_data</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">customer_id</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_001-480.webp 480w,/assets/img/customer_data_sql_img/Selection_001-800.webp 800w,/assets/img/customer_data_sql_img/Selection_001-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_001.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Then, we identify the duplicates by filtering the entries having more than 1 customer_id.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">customer_id</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">customer_id</span><span class="p">)</span>
<span class="k">FROM</span> <span class="n">customer_data</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">customer_id</span>
<span class="k">HAVING</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">customer_id</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_002-480.webp 480w,/assets/img/customer_data_sql_img/Selection_002-800.webp 800w,/assets/img/customer_data_sql_img/Selection_002-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_002.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h4 id="method-2--using-a-window-function">Method 2 : using a window function</h4> <p>Let’s check if there are any duplicates by partitioning by customer_id and adding row number.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">customer_id</span><span class="p">,</span>
<span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">customer_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_003-480.webp 480w,/assets/img/customer_data_sql_img/Selection_003-800.webp 800w,/assets/img/customer_data_sql_img/Selection_003-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_003.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Then, we identify the duplicates by using the previous query as sub-query and filtering the row where the row_num &gt; 1.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span>
<span class="k">FROM</span> <span class="p">(</span>
	<span class="k">SELECT</span> <span class="n">customer_id</span><span class="p">,</span>
	<span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">customer_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
	<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">)</span> <span class="k">AS</span> <span class="n">table_row</span>
<span class="k">WHERE</span> <span class="n">row_num</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_004-480.webp 480w,/assets/img/customer_data_sql_img/Selection_004-800.webp 800w,/assets/img/customer_data_sql_img/Selection_004-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_004.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>We then need to identify the id number of the row having more than 1 customer_id.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">id</span>
<span class="k">FROM</span> <span class="p">(</span>
	<span class="k">SELECT</span> <span class="n">id</span><span class="p">,</span>
	<span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">customer_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
	<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">)</span> <span class="k">AS</span> <span class="n">table_row</span>
<span class="k">WHERE</span> <span class="n">row_num</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_005-480.webp 480w,/assets/img/customer_data_sql_img/Selection_005-800.webp 800w,/assets/img/customer_data_sql_img/Selection_005-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_005.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Let’s delete the duplicates by using the filtered id previously identified.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">customer_data</span>
<span class="k">WHERE</span> <span class="n">id</span> <span class="k">IN</span> <span class="p">(</span>
	<span class="k">SELECT</span> <span class="n">id</span>
	<span class="k">FROM</span> <span class="p">(</span>
		<span class="k">SELECT</span> <span class="n">id</span><span class="p">,</span>
		<span class="n">ROW_NUMBER</span><span class="p">()</span> <span class="n">OVER</span><span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">customer_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">row_num</span>
		<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">)</span> <span class="k">AS</span> <span class="n">table_row</span>
	<span class="k">WHERE</span> <span class="n">row_num</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">);</span>
</code></pre></div></div> <p>NOTE : if the deletion didn’t work in MySQL Workbench, go to Edit &gt; Preferences… &gt; SQL editor. At the bottom, uncheck the box ‘Safe update’.</p> <h2 id="standardize-the-data">Standardize the data</h2> <p>Let’s remove unwanted characters in the phone numbers.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">phone</span><span class="p">,</span> <span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="s1">'[()-/+]'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> 
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_004-480.webp 480w,/assets/img/customer_data_sql_img/Selection_004-800.webp 800w,/assets/img/customer_data_sql_img/Selection_004-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_004.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Let’s update the table with the clean phone numbers.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">phone</span> <span class="o">=</span> <span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="s1">'[()-/+]'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="p">;</span>
</code></pre></div></div> <p>Let’s Format the phone numbers by adding a ‘-‘ at the right place except when the phone numbers are blank.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
<span class="n">phone</span><span class="p">,</span> 
<span class="n">CONCAT</span><span class="p">(</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="s1">'-'</span><span class="p">,</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="s1">'-'</span><span class="p">,</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span> 
<span class="k">FROM</span> <span class="n">customer_data</span>
<span class="k">WHERE</span> <span class="n">phone</span> <span class="o">!=</span> <span class="s1">''</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_005-480.webp 480w,/assets/img/customer_data_sql_img/Selection_005-800.webp 800w,/assets/img/customer_data_sql_img/Selection_005-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_005.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Let’s update the phone numbers with the new format.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">phone</span> <span class="o">=</span> <span class="n">CONCAT</span><span class="p">(</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="s1">'-'</span><span class="p">,</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="s1">'-'</span><span class="p">,</span>
	<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="k">WHERE</span> <span class="n">phone</span> <span class="o">!=</span> <span class="s1">''</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s format the birthdate from text to date format.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
<span class="n">birth_date</span><span class="p">,</span> 
<span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%m/%d/%Y'</span><span class="p">),</span>
<span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%Y/%d/%m'</span><span class="p">)</span>  
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_006-480.webp 480w,/assets/img/customer_data_sql_img/Selection_006-800.webp 800w,/assets/img/customer_data_sql_img/Selection_006-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_006.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>We notice that some dates are formatted in 2 different ways. We use a CASE statement to update the incorrect dates in their correct format order.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
<span class="n">birth_date</span><span class="p">,</span> 
<span class="k">CASE</span> 
<span class="k">WHEN</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%m/%d/%Y'</span><span class="p">)</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%m/%d/%Y'</span><span class="p">)</span>
<span class="k">WHEN</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%m/%d/%Y'</span><span class="p">)</span> <span class="k">IS</span> <span class="k">NULL</span> <span class="k">THEN</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%Y/%d/%m'</span><span class="p">)</span>
<span class="k">END</span>
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_007-480.webp 480w,/assets/img/customer_data_sql_img/Selection_007-800.webp 800w,/assets/img/customer_data_sql_img/Selection_007-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_007.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Note that we cannot use IF or CASE statements in the UPDATE function. We will use substrings to format the date. First, we format the dates that are in the incorrect format (id 9 and 11) with the following format : m/d/Y.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
<span class="n">birth_date</span><span class="p">,</span> <span class="n">CONCAT</span><span class="p">(</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">'/'</span><span class="p">,</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">'/'</span><span class="p">,</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_008-480.webp 480w,/assets/img/customer_data_sql_img/Selection_008-800.webp 800w,/assets/img/customer_data_sql_img/Selection_008-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_008.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>First, let’s update the birthdate with id 9 and 11.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">birth_date</span> <span class="o">=</span> <span class="n">CONCAT</span><span class="p">(</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">'/'</span><span class="p">,</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">'/'</span><span class="p">,</span>
<span class="k">SUBSTRING</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="k">WHERE</span> <span class="n">id</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">11</span><span class="p">);</span>
</code></pre></div></div> <p>Now, all the dates are in the same format. We just need to convert them from a text to a date format.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">birth_date</span> <span class="o">=</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%m/%d/%Y'</span><span class="p">);</span>
</code></pre></div></div> <p>Let’s rename the column name <code class="language-plaintext highlighter-rouge">Are you over 18?</code> to get rid of the unwanted space.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_data</span> <span class="k">RENAME</span> <span class="k">COLUMN</span> <span class="nv">`Are you over 18?`</span> <span class="k">TO</span> <span class="nv">`over_18`</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s format the over_18 column to only show Y and N using a CASE statement.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
<span class="n">over_18</span><span class="p">,</span> 
<span class="k">CASE</span> 
	<span class="k">WHEN</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'Yes'</span> <span class="k">THEN</span> <span class="s1">'Y'</span>
	<span class="k">WHEN</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'NO'</span> <span class="k">THEN</span> <span class="s1">'N'</span>
	<span class="k">ELSE</span> <span class="n">over_18</span>
<span class="k">END</span>
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_009-480.webp 480w,/assets/img/customer_data_sql_img/Selection_009-800.webp 800w,/assets/img/customer_data_sql_img/Selection_009-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_009.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Let’s update over_18 column with the correct format.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">over_18</span> <span class="o">=</span> <span class="k">CASE</span> 
	<span class="k">WHEN</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'Yes'</span> <span class="k">THEN</span> <span class="s1">'Y'</span>
	<span class="k">WHEN</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'NO'</span> <span class="k">THEN</span> <span class="s1">'N'</span>
	<span class="k">ELSE</span> <span class="n">over_18</span>
<span class="k">END</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s break out the address column into multiple columns. This makes more sense if we want to group by street, city or state in the future. We use SUBTRING_INDEX to identify the index of the comma delimiter in the address.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">address</span><span class="p">,</span> 
<span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">Street</span><span class="p">,</span>
<span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="s1">','</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">City</span><span class="p">,</span>
<span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="k">State</span>
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_010-480.webp 480w,/assets/img/customer_data_sql_img/Selection_010-800.webp 800w,/assets/img/customer_data_sql_img/Selection_010-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_010.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Let’s create some empty street, city and state columns after the address column. They are strings data type of less than 50 characters.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_data</span>
<span class="k">ADD</span> <span class="k">COLUMN</span> <span class="n">street</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">AFTER</span> <span class="n">address</span><span class="p">,</span>
<span class="k">ADD</span> <span class="k">COLUMN</span> <span class="n">city</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">AFTER</span> <span class="n">street</span><span class="p">,</span>
<span class="k">ADD</span> <span class="k">COLUMN</span> <span class="k">state</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">AFTER</span> <span class="n">city</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s populate the empty street, city and state columns with the correct data.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">street</span> <span class="o">=</span> <span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>

<span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">city</span> <span class="o">=</span> <span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="s1">','</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>

<span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="k">state</span> <span class="o">=</span> <span class="n">SUBSTRING_INDEX</span><span class="p">(</span><span class="n">address</span><span class="p">,</span><span class="s1">','</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</code></pre></div></div> <p>Let’s trim the blank spaces around the state and city string.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="k">state</span> <span class="o">=</span> <span class="k">TRIM</span><span class="p">(</span><span class="k">state</span><span class="p">);</span>

<span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">city</span> <span class="o">=</span> <span class="k">TRIM</span><span class="p">(</span><span class="n">city</span><span class="p">);</span>
</code></pre></div></div> <p>Let’s capitalize the state string.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="k">state</span> <span class="o">=</span> <span class="k">UPPER</span><span class="p">(</span><span class="k">state</span><span class="p">);</span>
</code></pre></div></div> <p>Let’s delete address column, as it is was broken down into other columns.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_data</span>
<span class="k">DROP</span> <span class="k">COLUMN</span> <span class="n">address</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s also delete the favorite color column, as the information is not relevant.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_data</span>
<span class="k">DROP</span> <span class="k">COLUMN</span> <span class="n">favorite_color</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s replace the blank values in phone and income columns with NULL. This makes sure that the future aggregate function calculations are not corrupted by the blank values.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">phone</span> <span class="o">=</span> <span class="k">NULL</span>
<span class="k">WHERE</span> <span class="n">phone</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>

<span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">income</span> <span class="o">=</span> <span class="k">NULL</span>
<span class="k">WHERE</span> <span class="n">income</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
</code></pre></div></div> <p>Let’s check if the customer declaring that they are over 18 are really over 18, by filtering the entries where 18 years from now is higher than their birthdate.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">birth_date</span><span class="p">,</span> <span class="n">over_18</span>
<span class="k">FROM</span> <span class="n">customer_data</span>
<span class="k">WHERE</span> <span class="p">(</span><span class="nb">YEAR</span><span class="p">(</span><span class="n">NOW</span><span class="p">())</span> <span class="o">-</span> <span class="mi">18</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nb">YEAR</span><span class="p">(</span><span class="n">birth_date</span><span class="p">);</span>
</code></pre></div></div> <div style="display: flex; flex-direction: row; align-items: center; justify-content: center;"> <div> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_011-480.webp 480w,/assets/img/customer_data_sql_img/Selection_011-800.webp 800w,/assets/img/customer_data_sql_img/Selection_011-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_011.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>We saw that 2 customers declaring being over 18. Let’s update these 2 entries with ‘N’ and the rest of the entries with ‘Y’.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'N'</span>
<span class="k">WHERE</span> <span class="p">(</span><span class="nb">YEAR</span><span class="p">(</span><span class="n">NOW</span><span class="p">())</span> <span class="o">-</span> <span class="mi">18</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nb">YEAR</span><span class="p">(</span><span class="n">birth_date</span><span class="p">);</span>

<span class="k">UPDATE</span> <span class="n">customer_data</span>
<span class="k">SET</span> <span class="n">over_18</span> <span class="o">=</span> <span class="s1">'Y'</span>
<span class="k">WHERE</span> <span class="p">(</span><span class="nb">YEAR</span><span class="p">(</span><span class="n">NOW</span><span class="p">())</span> <span class="o">-</span> <span class="mi">18</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nb">YEAR</span><span class="p">(</span><span class="n">birth_date</span><span class="p">);</span>
</code></pre></div></div> <p>Let’s look at the final cleaned up data.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> 
<span class="k">FROM</span> <span class="n">customer_data</span><span class="p">;</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/customer_data_sql_img/Selection_012-480.webp 480w,/assets/img/customer_data_sql_img/Selection_012-800.webp 800w,/assets/img/customer_data_sql_img/Selection_012-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/customer_data_sql_img/Selection_012.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="SQL" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="sql"/><category term="data-analysis"/><summary type="html"><![CDATA[Processed raw customer data using SQL by removing duplicates, handling missing values, standardizing formats, and splitting columns for better analysis. Ensured data integrity and prepared it for actionable insights.]]></summary></entry><entry><title type="html">Reinforcement Learning for Robotic Arm Control</title><link href="https://pierreexeter.github.io/blog/rl-reach/" rel="alternate" type="text/html" title="Reinforcement Learning for Robotic Arm Control"/><published>2025-05-17T21:01:00+00:00</published><updated>2025-05-17T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/rl-reach</id><content type="html" xml:base="https://pierreexeter.github.io/blog/rl-reach/"><![CDATA[<p>I trained a reinforcement learning agent in a custom Gymnasium environment to solve a robotic reach task using PyBullet physics. This project demonstrates my ability to implement RL algorithms, simulate robotic systems, and optimize control policies for real-world applications.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/rlreach1-480.webp 480w,/assets/img/portfolio/rlreach1-800.webp 800w,/assets/img/portfolio/rlreach1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/rlreach1.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Custom training environment in Pybullet. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/rlreach2-480.webp 480w,/assets/img/portfolio/rlreach2-800.webp 800w,/assets/img/portfolio/rlreach2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/rlreach2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Training monitoring plot. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/rlreach3-480.webp 480w,/assets/img/portfolio/rlreach3-800.webp 800w,/assets/img/portfolio/rlreach3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/rlreach3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Training convergence plot. </div> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/rl_reach"> <img class="only-light w-100" alt="PierreExeter/rl_reach" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=rl_reach&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/rl_reach" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=rl_reach&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div>]]></content><author><name></name></author><category term="reinforcement-learning"/><category term="robotics"/><category term="python"/><summary type="html"><![CDATA[Trained a reinforcement learning agent in a custom Gymnasium environment to solve a robotic reach task using PyBullet physics. This project demonstrates my ability to implement RL algorithms, simulate robotic systems, and optimize control policies for real-world applications.]]></summary></entry><entry><title type="html">Custom Reinforcement Learning Environments</title><link href="https://pierreexeter.github.io/blog/rl-envs/" rel="alternate" type="text/html" title="Custom Reinforcement Learning Environments"/><published>2025-05-16T21:01:00+00:00</published><updated>2025-05-16T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/rl-envs</id><content type="html" xml:base="https://pierreexeter.github.io/blog/rl-envs/"><![CDATA[<p>I developed modular Gymnasium environments for training RL agents, integrating physics-based robotics simulations via PyBullet and ROS.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/custom1-480.webp 480w,/assets/img/portfolio/custom1-800.webp 800w,/assets/img/portfolio/custom1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/custom1.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/custom2-480.webp 480w,/assets/img/portfolio/custom2-800.webp 800w,/assets/img/portfolio/custom2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/custom2.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Pybullet environments. </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/custom3-480.webp 480w,/assets/img/portfolio/custom3-800.webp 800w,/assets/img/portfolio/custom3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/custom3.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/custom4-480.webp 480w,/assets/img/portfolio/custom4-800.webp 800w,/assets/img/portfolio/custom4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/custom4.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> ROS environments. </div> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/custom_gym_envs"> <img class="only-light w-100" alt="PierreExeter/custom_gym_envs" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=custom_gym_envs&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/custom_gym_envs" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=custom_gym_envs&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div>]]></content><author><name></name></author><category term="reinforcement-learning"/><category term="robotics"/><category term="python"/><summary type="html"><![CDATA[Developed modular Gymnasium environments for training RL agents, integrating physics-based robotics simulations via PyBullet and ROS.]]></summary></entry><entry><title type="html">Classifier Visualisation</title><link href="https://pierreexeter.github.io/blog/classifier-visualisation/" rel="alternate" type="text/html" title="Classifier Visualisation"/><published>2025-05-14T21:01:00+00:00</published><updated>2025-05-14T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/classifier-visualisation</id><content type="html" xml:base="https://pierreexeter.github.io/blog/classifier-visualisation/"><![CDATA[<p>I developed an intuitive Python tool to train, evaluate, and visualize decision boundaries of multiple classifiers (SVM, Random Forest, Logistic Regression) on 2D datasets. I also implemented hyperparameter tuning to optimize model performance while providing visual explanations of model behavior and trade-offs.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/classification1-480.webp 480w,/assets/img/portfolio/classification1-800.webp 800w,/assets/img/portfolio/classification1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/classification1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> K-nearest neighbors classifier fitted on a 2D dataset. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/classification2-480.webp 480w,/assets/img/portfolio/classification2-800.webp 800w,/assets/img/portfolio/classification2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/classification2.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Optimising the regularization parameter of the Support Vector Classifier. </div> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/classifier_visualizations"> <img class="only-light w-100" alt="PierreExeter/classifier_visualizations" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=classifier_visualizations&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/classifier_visualizations" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=classifier_visualizations&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div>]]></content><author><name></name></author><category term="python"/><category term="scikit-learn"/><category term="classification"/><category term="supervised-learning"/><summary type="html"><![CDATA[Developed an intuitive Python tool to train, evaluate, and visualize decision boundaries of multiple classifiers (SVM, Random Forest, Logistic Regression) on 2D datasets. Implemented hyperparameter tuning to optimize model performance while providing visual explanations of model behavior and trade-offs.]]></summary></entry><entry><title type="html">Multi-Objective Optimization in Python</title><link href="https://pierreexeter.github.io/blog/optimisation/" rel="alternate" type="text/html" title="Multi-Objective Optimization in Python"/><published>2025-05-13T21:01:00+00:00</published><updated>2025-05-13T21:01:00+00:00</updated><id>https://pierreexeter.github.io/blog/optimisation</id><content type="html" xml:base="https://pierreexeter.github.io/blog/optimisation/"><![CDATA[<p>A collection of practical examples and visualizations demonstrating evolutionary algorithms, constraint handling, and Pareto front analysis using the PYMOO framework.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/optimisation2-480.webp 480w,/assets/img/portfolio/optimisation2-800.webp 800w,/assets/img/portfolio/optimisation2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/optimisation2.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/portfolio/optimisation1-480.webp 480w,/assets/img/portfolio/optimisation1-800.webp 800w,/assets/img/portfolio/optimisation1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/portfolio/optimisation1.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Objective space and design space. </div> <h2 id="code">Code</h2> <div class="repo p-2 text-center"> <a href="https://github.com/PierreExeter/pymoo-tutorials"> <img class="only-light w-100" alt="PierreExeter/pymoo-tutorials" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=pymoo-tutorials&amp;theme=vue&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> <img class="only-dark w-100" alt="PierreExeter/pymoo-tutorials" src="https://github-readme-stats.vercel.app/api/pin/?username=PierreExeter&amp;repo=pymoo-tutorials&amp;theme=vue-dark&amp;locale=en&amp;show_owner=false&amp;description_lines_count=2"/> </a> </div>]]></content><author><name></name></author><category term="python"/><category term="optimisation"/><category term="pymoo"/><summary type="html"><![CDATA[A collection of practical examples and visualizations demonstrating evolutionary algorithms, constraint handling, and Pareto front analysis using the PYMOO framework.]]></summary></entry></feed>